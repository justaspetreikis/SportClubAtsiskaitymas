// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportClub.Repositories;

#nullable disable

namespace SportClub.Migrations
{
    [DbContext(typeof(SportClubDBContext))]
    [Migration("20230124185655_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DBAtsiskaitymas.Models.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdentificationNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DBAtsiskaitymas.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("DBAtsiskaitymas.Models.Trainer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SportId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SportId");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("DBAtsiskaitymas.Models.TrainerClient", b =>
                {
                    b.Property<Guid>("TrainersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TrainersId", "ClientsId");

                    b.HasIndex("ClientsId");

                    b.ToTable("TrainersClients");
                });

            modelBuilder.Entity("DBAtsiskaitymas.Models.Trainer", b =>
                {
                    b.HasOne("DBAtsiskaitymas.Models.Sport", null)
                        .WithMany("Trainers")
                        .HasForeignKey("SportId");
                });

            modelBuilder.Entity("DBAtsiskaitymas.Models.TrainerClient", b =>
                {
                    b.HasOne("DBAtsiskaitymas.Models.Client", "Client")
                        .WithMany("TrainersClients")
                        .HasForeignKey("ClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBAtsiskaitymas.Models.Trainer", "Trainer")
                        .WithMany("TrainersClients")
                        .HasForeignKey("TrainersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("DBAtsiskaitymas.Models.Client", b =>
                {
                    b.Navigation("TrainersClients");
                });

            modelBuilder.Entity("DBAtsiskaitymas.Models.Sport", b =>
                {
                    b.Navigation("Trainers");
                });

            modelBuilder.Entity("DBAtsiskaitymas.Models.Trainer", b =>
                {
                    b.Navigation("TrainersClients");
                });
#pragma warning restore 612, 618
        }
    }
}
